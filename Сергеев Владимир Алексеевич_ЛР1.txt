- Установил git
- Провел первоначальную настройку (git  config --global user.name "Vladimir", email аналогично) 
- Создал каталог для выполнения задания
- Инициализировал git (git init)
- Создал файл отчета и проиндексировал его (git add *.txt)
- Сделал первый коммит (git add commit -m 'first com')
- Разобрался с игнорированием, сравнением, удалением и перемещением:
1. Создал файл .gitignore.txt, где прописал расширеширение для игнорирования(.txt). Сделал 3 коммит
2. Создал файл lol.txt в каталоге. Используя git diff отследил его появление. Добавил в него текст и сохранил. Тем же git diff увидел созданный текст
3. Удалил lol.txt с помощью rm -f 'lol.txt'
4. Создал newfile.txt с некоторым текстом и папку new в каталоге. Командой git mv newfile.txt new/hh.txt перенес newfile.txt в папку new с новым названием hh.txt
- Сделал 4 коммит
- Через git log просмотрел информацию об истории коммитов
- Создал метки: аннотированый тег (git tag -a beta -m 'test') и легковесный тег (git tag test2). Удалил теги (git tag -d <имя тега>)
- Cделал 5 коммит
- Для отмены изменений можно использовать git checkout <имя коммита> для перехода к какому-либо коммиту
- Создал ветку git switch -c 'super_vetka', перемещаться с ветки на ветку можно через git switch <имя ветки>. Использовал git branch 'super_vetka' для ее удаления. Конфликты слияния будут при попытке слить 2 параллельные ветки, отвечающие за одни файлы. Надо выбрать одну
- Скрыл ветку через git stash, с помощью git stash apply stash@<index> вернул обратно